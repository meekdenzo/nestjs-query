"use strict";(self.webpackChunknestjs_query=self.webpackChunknestjs_query||[]).push([[8830],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,m=u["".concat(l,".").concat(d)]||u[d]||y[d]||a;return n?r.createElement(m,s(s({ref:t},p),{},{components:n})):r.createElement(m,s({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1875:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),s=["components"],i={title:"Serialization"},l=void 0,c={unversionedId:"persistence/typegoose/serialization",id:"persistence/typegoose/serialization",title:"Serialization",description:"Using class-transformer is a popular libarary used in nestjs, unfortunately class-transformer does not play nicely with tyepgoose documents.",source:"@site/docs/persistence/typegoose/serialization.md",sourceDirName:"persistence/typegoose",slug:"/persistence/typegoose/serialization",permalink:"/nestjs-query/docs/persistence/typegoose/serialization",draft:!1,editUrl:"https://github.com/tripss/nestjs-query/edit/master/documentation/docs/persistence/typegoose/serialization.md",tags:[],version:"current",frontMatter:{title:"Serialization"},sidebar:"docs",previous:{title:"Custom Service",permalink:"/nestjs-query/docs/persistence/typegoose/custom-service"},next:{title:"Getting Started",permalink:"/nestjs-query/docs/graphql/getting-started"}},p={},u=[],y={toc:u},d="wrapper";function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)(d,(0,r.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Using ",(0,a.kt)("inlineCode",{parentName:"p"},"class-transformer")," is a popular libarary used in ",(0,a.kt)("inlineCode",{parentName:"p"},"nestjs"),", unfortunately ",(0,a.kt)("inlineCode",{parentName:"p"},"class-transformer")," does not play nicely with ",(0,a.kt)("inlineCode",{parentName:"p"},"tyepgoose")," documents."),(0,a.kt)("p",null,"For most use cases ",(0,a.kt)("inlineCode",{parentName:"p"},"nestjs-query")," will take care of the serialization for you through ",(0,a.kt)("a",{parentName:"p",href:"/nestjs-query/docs/concepts/advanced/assemblers"},"assemblers"),". If you find yourself in a situation where you want to use ",(0,a.kt)("inlineCode",{parentName:"p"},"class-transformer")," with a model you should use the following patterns."),(0,a.kt)("p",null,"To convert your DTO into a model, you can inject your Model and create a new instance."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"new TodoItemModel(todoItemDTO);\n")),(0,a.kt)("p",null,"When converting your entity into a DTO, you can use the following."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const dto = plainToClass(TodoItemDTO, todoItemEntity.toObject({ virtuals: true }));\n")))}m.isMDXComponent=!0}}]);