"use strict";(self.webpackChunknestjs_query=self.webpackChunknestjs_query||[]).push([[9972],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(7294),o=n(4334);const a={tabItem:"tabItem_Ymn6"};function i(e){var t=e.children,n=e.hidden,i=e.className;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(a.tabItem,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>O});var r=n(7462),o=n(7294),a=n(4334),i=n(2466),l=n(6550),u=n(1980),s=n(7392),c=n(12);function d(e){return function(e){var t,n;return null!=(t=null==(n=o.Children.map(e,(function(e){if(!e||(0,o.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function p(e){var t=e.values,n=e.children;return(0,o.useMemo)((function(){var e=null!=t?t:d(n);return function(e){var t=(0,s.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function m(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function f(e){var t=e.queryString,n=void 0!==t&&t,r=e.groupId,a=(0,l.k6)(),i=function(e){var t=e.queryString,n=void 0!==t&&t,r=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:n,groupId:r});return[(0,u._X)(i),(0,o.useCallback)((function(e){if(i){var t=new URLSearchParams(a.location.search);t.set(i,e),a.replace(Object.assign({},a.location,{search:t.toString()}))}}),[i,a])]}function v(e){var t,n,r,a,i=e.defaultValue,l=e.queryString,u=void 0!==l&&l,s=e.groupId,d=p(e),v=(0,o.useState)((function(){return function(e){var t,n=e.defaultValue,r=e.tabValues;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+r.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var o=null!=(t=r.find((function(e){return e.default})))?t:r[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:i,tabValues:d})})),y=v[0],g=v[1],b=f({queryString:u,groupId:s}),h=b[0],T=b[1],O=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:s}.groupId),n=(0,c.Nk)(t),r=n[0],a=n[1],[r,(0,o.useCallback)((function(e){t&&a.set(e)}),[t,a])]),k=O[0],w=O[1],x=function(){var e=null!=h?h:k;return m({value:e,tabValues:d})?e:null}();return(0,o.useLayoutEffect)((function(){x&&g(x)}),[x]),{selectedValue:y,selectValue:(0,o.useCallback)((function(e){if(!m({value:e,tabValues:d}))throw new Error("Can't select invalid tab value="+e);g(e),T(e),w(e)}),[T,w,d]),tabValues:d}}var y=n(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){var t=e.className,n=e.block,l=e.selectedValue,u=e.selectValue,s=e.tabValues,c=[],d=(0,i.o5)().blockElementScrollPositionUntilNextRender,p=function(e){var t=e.currentTarget,n=c.indexOf(t),r=s[n].value;r!==l&&(d(t),u(r))},m=function(e){var t,n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":var r,o=c.indexOf(e.currentTarget)+1;n=null!=(r=c[o])?r:c[0];break;case"ArrowLeft":var a,i=c.indexOf(e.currentTarget)-1;n=null!=(a=c[i])?a:c[c.length-1]}null==(t=n)||t.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},t)},s.map((function(e){var t=e.value,n=e.label,i=e.attributes;return o.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:function(e){return c.push(e)},onKeyDown:m,onClick:p},i,{className:(0,a.Z)("tabs__item",g.tabItem,null==i?void 0:i.className,{"tabs__item--active":l===t})}),null!=n?n:t)})))}function h(e){var t=e.lazy,n=e.children,r=e.selectedValue,a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){var i=a.find((function(e){return e.props.value===r}));return i?(0,o.cloneElement)(i,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},a.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==r})})))}function T(e){var t=v(e);return o.createElement("div",{className:(0,a.Z)("tabs-container",g.tabList)},o.createElement(b,(0,r.Z)({},e,t)),o.createElement(h,(0,r.Z)({},e,t)))}function O(e){var t=(0,y.Z)();return o.createElement(T,(0,r.Z)({key:String(t)},e))}},7609:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>f,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=(n(4866),n(5162),["components"]),l={title:"v0.23.x to v0.24.x"},u=void 0,s={unversionedId:"migration-guides/v0.23.x-to-v0.24.x",id:"migration-guides/v0.23.x-to-v0.24.x",title:"v0.23.x to v0.24.x",description:"Removed Public ConnectionType and SortType function.",source:"@site/docs/migration-guides/v0.23.x-to-v0.24.x.mdx",sourceDirName:"migration-guides",slug:"/migration-guides/v0.23.x-to-v0.24.x",permalink:"/nestjs-query/docs/migration-guides/v0.23.x-to-v0.24.x",draft:!1,editUrl:"https://github.com/tripss/nestjs-query/edit/master/documentation/docs/migration-guides/v0.23.x-to-v0.24.x.mdx",tags:[],version:"current",frontMatter:{title:"v0.23.x to v0.24.x"},sidebar:"docs",previous:{title:"v0.24.x to v0.25.x",permalink:"/nestjs-query/docs/migration-guides/v0.24.x-to-v0.25.x"},next:{title:"v0.22.x to v0.23.x",permalink:"/nestjs-query/docs/migration-guides/v0.22.x-to-v0.23.x"}},c={},d=[{value:"Removed Public ConnectionType and SortType function.",id:"removed-public-connectiontype-and-sorttype-function",level:2},{value:"Old",id:"old",level:3},{value:"New",id:"new",level:3},{value:"<code>@QueryOptions</code> Decorator",id:"queryoptions-decorator",level:2},{value:"Old",id:"old-1",level:3},{value:"New",id:"new-1",level:3}],p={toc:d},m="wrapper";function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"removed-public-connectiontype-and-sorttype-function"},"Removed Public ConnectionType and SortType function."),(0,a.kt)("p",null,"In versions prior to ",(0,a.kt)("inlineCode",{parentName:"p"},"v0.24.0")," the ",(0,a.kt)("inlineCode",{parentName:"p"},"ConnectionType")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"SortType")," functions could be used to get a reference to a\n",(0,a.kt)("inlineCode",{parentName:"p"},"Connection")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Sort")," graphql implementation. In ",(0,a.kt)("inlineCode",{parentName:"p"},"v0.24.0")," there public methods were removed in favor of pulling\nthem off of the ",(0,a.kt)("inlineCode",{parentName:"p"},"QueryArgs"),"."),(0,a.kt)("p",null,"This change was made to remove possibility of creating ConnectionTypes and SortTypes that are incompatible with the\nQueryArgsType."),(0,a.kt)("h3",{id:"old"},"Old"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { ConnectionType, SortType } from '@ptc-org/nestjs-query-graphql';\nimport { TodoItemDTO } from './dto/todo-item.dto';\n\nexport const TodoItemConnection = ConnectionType(TodoItemDTO);\nexport const TodoItemSort = SortType(TodoItemDTO);\n")),(0,a.kt)("h3",{id:"new"},"New"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { QueryArgsType } from '@ptc-org/nestjs-query-graphql';\nimport { TodoItemDTO } from './dto/todo-item.dto';\n\nexport const TodoItemQueryArgs = QueryArgsType(TodoItemDTO)\nexport const TodoItemConnection = TodoItemQueryArgs.ConnectionType;\nexport const TodoItemSort = TodoItemQueryArgs.SortType;\n")),(0,a.kt)("h2",{id:"queryoptions-decorator"},(0,a.kt)("inlineCode",{parentName:"h2"},"@QueryOptions")," Decorator"),(0,a.kt)("p",null,"In previous versions you had to specify options for querying and connections in your resolver. In ",(0,a.kt)("inlineCode",{parentName:"p"},"v0.24.0")," a new\n",(0,a.kt)("inlineCode",{parentName:"p"},"@QueryOptions")," decorator was  introduced to allow specifying all query related options along side the DTO, instead of splitting the configuration between the resolver and ",(0,a.kt)("inlineCode",{parentName:"p"},"DTO"),".  The new ",(0,a.kt)("inlineCode",{parentName:"p"},"@QueryOptions")," provides a few benefits."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Better re-use across types by avoiding passing configuration options all the way through the code to each piece that may need them."),(0,a.kt)("li",{parentName:"ul"},"Decoupling query options from the resolver. This puts us in a better position to decouple the DTO definition from the transport layer (e.g. graphql)"),(0,a.kt)("li",{parentName:"ul"},"Keeps DTO configuration options closer to the source.")),(0,a.kt)("h3",{id:"old-1"},"Old"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.module.ts"',title:'"todo-item.module.ts"'},"import { NestjsQueryGraphQLModule } from '@ptc-org/nestjs-query-graphql';\nimport { NestjsQueryTypeOrmModule } from '@ptc-org/nestjs-query-typeorm';\nimport { Module } from '@nestjs/common';\nimport { TodoItemDTO } from './todo-item.dto';\nimport { TodoItemEntity } from './todo-item.entity';\n\n@Module({\n  imports: [\n    NestjsQueryGraphQLModule.forFeature({\n      imports: [NestjsQueryTypeOrmModule.forFeature([TodoItemEntity])],\n      resolvers: [{\n        DTOClass: TodoItemDTO,\n        EntityClass: TodoItemEntity,\n        pagingStrategy: PagingStrategies.OFFSET,\n        enableTotalCount: true,\n        defaultResultSize: 5,\n        maxResultSize: 100,\n        defaultFilter: { completed: { is: true } },\n        defaultSort: [{ field: 'title', direction: SortDirection.ASC }],\n      }],\n    }),\n  ],\n})\nexport class TodoItemModule {}\n")),(0,a.kt)("h3",{id:"new-1"},"New"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="todo-item.dto.ts"',title:'"todo-item.dto.ts"'},"import { FilterableField, QueryOptions, PagingStrategies } from '@ptc-org/nestjs-query-graphql';\nimport { ObjectType, ID, GraphQLISODateTime, Field } from '@nestjs/graphql';\n\n@ObjectType('TodoItem')\n@QueryOptions({\n  pagingStrategy: PagingStrategies.OFFSET, // use offset based paging for this DTO\n  enableTotalCount: true, // enable querying for totalCount\n  defaultResultSize: 5, // return 5 records by default\n  maxResultSize: 100, // do not allow querying for more than 100 records at a time\n  defaultFilter: { completed: { is: true } }, // default filter when one is not provided\n  defaultSort: [{ field: 'title', direction: SortDirection.ASC }], // default sort when one is not provided.\n})\nexport class TodoItemDTO {\n  @FilterableField(() => ID)\n  id!: string;\n\n  @FilterableField()\n  title!: string;\n\n  @FilterableField()\n  completed!: boolean;\n\n  @FilterableField(() => GraphQLISODateTime)\n  created!: Date;\n\n  @FilterableField(() => GraphQLISODateTime)\n  updated!: Date;\n}\n")))}f.isMDXComponent=!0}}]);